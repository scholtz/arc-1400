{
    "name": "Arc88",
    "structs": {},
    "methods": [
        {
            "name": "arc88_owner",
            "args": [],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc88_is_owner",
            "args": [
                {
                    "type": "address",
                    "name": "query"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc88_initialize_owner",
            "args": [
                {
                    "type": "address",
                    "name": "new_owner"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Explicit initialization override (creation group recommended). Fails if already initialized.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc88_transfer_ownership",
            "args": [
                {
                    "type": "address",
                    "name": "new_owner"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "arc88_OwnershipTransferred",
                    "args": [
                        {
                            "type": "address",
                            "name": "previous_owner"
                        },
                        {
                            "type": "address",
                            "name": "new_owner"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "arc88_renounce_ownership",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "arc88_OwnershipRenounced",
                    "args": [
                        {
                            "type": "address",
                            "name": "previous_owner"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "arc88_transfer_ownership_request",
            "args": [
                {
                    "type": "address",
                    "name": "pending"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "arc88_OwnershipTransferRequested",
                    "args": [
                        {
                            "type": "address",
                            "name": "previous_owner"
                        },
                        {
                            "type": "address",
                            "name": "pending_owner"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "arc88_accept_ownership",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [
                {
                    "name": "arc88_OwnershipTransferAccepted",
                    "args": [
                        {
                            "type": "address",
                            "name": "previous_owner"
                        },
                        {
                            "type": "address",
                            "name": "new_owner"
                        }
                    ]
                },
                {
                    "name": "arc88_OwnershipTransferred",
                    "args": [
                        {
                            "type": "address",
                            "name": "previous_owner"
                        },
                        {
                            "type": "address",
                            "name": "new_owner"
                        }
                    ]
                }
            ],
            "recommendations": {}
        },
        {
            "name": "arc88_cancel_ownership_request",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "ARC-88 Ownable Access Control\nDefault owner = application creator unless overridden by arc88_initialize_owner in creation group.",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 3
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "owner": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "bw=="
                },
                "pendingOwner": {
                    "keyType": "AVMString",
                    "valueType": "address",
                    "key": "cG8="
                },
                "initialized": {
                    "keyType": "AVMString",
                    "valueType": "byte",
                    "key": "b2k="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        133,
                        145,
                        157,
                        172,
                        184,
                        199,
                        214,
                        234
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        367
                    ],
                    "errorMessage": "already_initialized"
                },
                {
                    "pc": [
                        256
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        136,
                        148,
                        160,
                        175,
                        187,
                        202,
                        217,
                        237
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        270,
                        299,
                        321,
                        333,
                        358,
                        398,
                        409,
                        431,
                        437,
                        462,
                        481,
                        493,
                        521,
                        529,
                        563
                    ],
                    "errorMessage": "check GlobalState exists"
                },
                {
                    "pc": [
                        400,
                        433,
                        464,
                        565
                    ],
                    "errorMessage": "not_owner"
                },
                {
                    "pc": [
                        515,
                        525
                    ],
                    "errorMessage": "not_pending_owner"
                },
                {
                    "pc": [
                        485
                    ],
                    "errorMessage": "pending_transfer_exists"
                },
                {
                    "pc": [
                        372,
                        405,
                        469
                    ],
                    "errorMessage": "zero_address_not_allowed"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAAEmBwFvIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnBvAm9pAQAEFR98dQRDVdKtMRtBALeCCAQHAmVOBNAVck4EAp/swARzSTNOBNt8gu8E/SwsbgRCpfBlBK1PaOo2GgCOCABnAFMARAA1ACkAGgAOAAIiQzEZFEQxGESIAZ8jQzEZFEQxGESIAWMjQzEZFEQxGEQ2GgGIARwjQzEZFEQxGESIAPQjQzEZFEQxGEQ2GgGIAMEjQzEZFEQxGEQ2GgGIAIcjQzEZFEQxGEQ2GgGIAE0nBUxQsCNDMRkURDEYRIgANCcFTFCwI0MxGUD/gzEYFEQjQyIrZUUBQQAIIitlRBdAABEiKGVFAUAABCgyCWcrgAEBZ4mI/9siKGVEiYoBAYj/0CIoZUUBQAADJwSJIihlRCkSQQADJwSJIihlRIv/EicEIk8CVImKAQAiK2VFAUEAHCIrZUQXIxJBABIjFESL/ykTRCiL/2crgAEBZ4kiQv/rigEAiP96MQAiKGVEEkSL/ykTRCIoZUQoi/9ni/9QJwZMULCJiP9ZMQAiKGVEEkQiKGVEKClngAQ0aqFmTFCwiYoBAIj/OjEAIihlRBJEi/8pE0QiKmVFAUEACCIqZUQpExREKov/ZyIoZUSL/1CABBa/H5FMULCJiP8FIiplRQFEMQAiKmVESwESRCIoZUQoSwJnKilnTFCABPfjazdLAVCwJwZMULCJiP7VMQAiKGVEEkQqKWeJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 7,
            "patch": 0
        }
    },
    "events": [
        {
            "name": "arc88_OwnershipTransferred",
            "args": [
                {
                    "type": "address",
                    "name": "previous_owner"
                },
                {
                    "type": "address",
                    "name": "new_owner"
                }
            ]
        },
        {
            "name": "arc88_OwnershipRenounced",
            "args": [
                {
                    "type": "address",
                    "name": "previous_owner"
                }
            ]
        },
        {
            "name": "arc88_OwnershipTransferRequested",
            "args": [
                {
                    "type": "address",
                    "name": "previous_owner"
                },
                {
                    "type": "address",
                    "name": "pending_owner"
                }
            ]
        },
        {
            "name": "arc88_OwnershipTransferAccepted",
            "args": [
                {
                    "type": "address",
                    "name": "previous_owner"
                },
                {
                    "type": "address",
                    "name": "new_owner"
                }
            ]
        }
    ],
    "templateVariables": {}
}